# Function to count triangles in a .off file
def count_triangles(file_path):
    with open(file_path, 'r') as file:
        lines = file.readlines()
        triangle_count = int(lines[1].split()[0])  # The second line contains the number of triangles
    return triangle_count

# List of files
files = [
    "/36374", "/39246", "/39635", "/41940", "/42211", "/42322", "/42330", "/42333", "/42817", "/42881",
    "/42944", "/44038", "/44040", "/44041", "/44874", "/46928", "/49162", "/49885", "/49891", "/50240",
    "/50274", "/51347", "/51355", "/52310", "/53800", "/55928", "/56117", "/56264", "/56621", "/57253",
    "/57254", "/59052", "/60170", "/60458", "/61319", "/61320", "/61394", "/62989", "/63277", "/64316",
    "/64891", "/64990", "/65033", "/65526", "/65591", "/67893", "/69220", "/69351", "/69707", "/70023",
    "/71996", "/71997", "/72601", "/73101", "/73177", "/73400", "/74459", "/74500", "/75068", "/75088",
    "/75279", "/75357", "/77171", "/77525", "/77958", "/78227", "/78533", "/78534", "/78535", "/79093",
    "/79136", "/79353", "/79357", "/79518", "/79556", "/79850", "/80433", "/80757", "/80759", "/80768",
    "/81080", "/81081", "/81082", "/81083", "/81084", "/81085", "/81109", "/81110", "/81112", "/81122",
    "/81129", "/81131", "/81132", "/81133", "/81182", "/81210", "/81211", "/81215", "/81363", "/83577",
    "/83694", "/83721", "/84130", "/84131", "/84756", "/84986", "/84997", "/85534", "/85549", "/85882",
    "/85887", "/86056", "/86160", "/86163", "/87183", "/87344", "/87345", "/90247", "/90248", "/90979",
    "/92417", "/93150", "/93364", "/94085", "/94240", "/94241", "/94484", "/94900", "/96564", "/96579",
    "/98546", "/98571", "/98925", "/99775", "/99894", "/99902", "/101168", "/101648", "/104188", "/104606",
    "/105335", "/105867", "/106337", "/106830", "/106833", "/106838", "/106839", "/106840", "/106842",
    "/107202", "/107543", "/107554", "/108312", "/108319", "/109118", "/109923", "/110031", "/110707",
    "/110709", "/110719", "/110725", "/111388", "/111399", "/111876", "/111878", "/112543", "/112778",
    "/112831", "/112834", "/112835", "/112854", "/112865", "/112866", "/112929", "/113906", "/119052",
    "/119867", "/132432", "/133086", "/135456", "/147525", "/147736", "/149255", "/150242", "/162399",
    "/166277", "/170991", "/175194", "/175914", "/180693", "/185292", "/185293", "/186558", "/189519",
    "/202266", "/202267", "/206492", "/206493", "/208718", "/208728", "/228304", "/229331", "/229958",
    "/236148", "/236159", "/242233", "/242236", "/242237", "/242554", "/242578", "/242579", "/246494",
    "/247517", "/250143", "/250767", "/257598", "/259007", "/259008", "/259165", "/259180", "/260055",
    "/267486", "/267490", "/267853", "/269443", "/270395", "/270401", "/278141", "/282598", "/301928",
    "/301929", "/301930", "/314589", "/314748", "/317215", "/346290", "/357788", "/357802", "/357816",
    "/358064", "/366958", "/369989", "/373703", "/373704", "/376253", "/378036", "/378053", "/386838",
    "/386841", "/386846", "/388569", "/388571", "/388628", "/388631", "/388632", "/393207", "/394203",
    "/416682", "/423069", "/437349", "/437350", "/470465", "/471288", "/486343", "/495915", "/495918",
    "/497995", "/498454", "/498458", "/498459", "/498460", "/498974", "/498979", "/527631", "/530426",
    "/562343", "/579053", "/579054", "/613670", "/613708", "/622327", "/750987", "/785453", "/789801",
    "/790253", "/804300", "/804302", "/815482", "/856336", "/859654", "/860049", "/866925", "/888457",
    "/888463", "/888464", "/929563", "/931873", "/931875", "/931877", "/931880", "/931881", "/931885",
    "/931888", "/931889", "/931890", "/994785", "/994786", "/996796", "/996798", "/996800", "/996801",
    "/996802", "/996803", "/996805", "/996807", "/996812", "/996814", "/996815", "/996816", "/1005267",
    "/1005284", "/1017010", "/1017011", "/1017012", "/1017013", "/1017015", "/1017016", "/1017017",
    "/1017019", "/1036656", "/1037021", "/1037023", "/1037028", "/1038436", "/1038438", "/1038441",
    "/1038446", "/1041419", "/1041432", "/1041448", "/1059578", "/1059579", "/1064683", "/1081358",
    "/1087134", "/1102667", "/1126615", "/1126618", "/1146170", "/1146176", "/1181083", "/1207668",
    "/1287883", "/1312956", "/1312963", "/1312972", "/1313552", "/1313554", "/1315843", "/1341743",
    "/1344049", "/1344056", "/1344059", "/1344060", "/1344061", "/1356635", "/1356648", "/1368057",
    "/1368059", "/1409877", "/1432660", "/1450243", "/1450322", "/1508788", "/1508790", "/1508791",
    "/1509643", "/1527408", "/1527409", "/1527410", "/1527416", "/1591710", "/1706467", "/1706469",
    "/1706474", "/1706479", "/1716273", "/1716274", "/1716275", "/1716276", "/1716277", "/1716278",
    "/1716279", "/1716280", "/1716281", "/1716282", "/1722414", "/1722420", "/42323", "/42324", "/42325",
    "/42326", "/42327", "/42328", "/42329", "/42331", "/44629", "/60745", "/67709", "/75059", "/83642",
    "/87674", "/90151", "/94078", "/107545", "/110717", "/112825", "/112826", "/112833", "/113685",
    "/131249", "/134705", "/247516", "/260054", "/263999", "/298323", "/387223", "/498456", "/498461",
    "/996811", "/1041418", "/1064679", "/1356639", "/1368052", "/1508789", "/1706478"
]

# Function to get file path
def get_file_path(file):
    return f"./Thingi10K{file}.off"

# Initialize variables
min_triangles = float('inf')
min_mesh_file = None

# Iterate through files and find the one with the minimum triangles
for file_name in files:
    file_path = get_file_path(file_name)
    triangles = count_triangles(file_path)
    if triangles < min_triangles:
        min_triangles = triangles
        min_mesh_file = file_name
print("Minimum triangles:", min_triangles)  

# Output the file with the minimum number of triangles
print("Mesh file with minimum triangles:", min_mesh_file)
